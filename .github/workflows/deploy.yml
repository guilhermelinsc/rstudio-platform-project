name: CI/CD for RStudio Platform Project

on:
  pull_request:
    branches:
      - main
    paths:
      - 'Dockerfile'
      - '**/*.py'
      - '**/*.yml'
      - '**/*.md'

jobs:
  docker-build-and-push:
    name: Build & Push Docker Image on Dockerfile Change
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Read version from VERSION file
        id: version
        run: echo "tag=$(cat VERSION)" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          docker build -t guilhermelinsc/rstudio-ms:${{ steps.version.outputs.tag }} .
          echo "$DOCKERHUB_TOKEN" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
          docker push guilhermelinsc/rstudio-ms:${{ steps.version.outputs.tag }}

      - name: Determine version bump type from PR labels or commit message
        id: bump_type
        run: |
          # Default bump type is patch
          bump_type="patch"

          # Check if the PR has a label for version bump
          pr_labels=$(gh pr view ${{ github.event.pull_request.number }} --json labels --jq '.labels[].name' || echo "")
          if [[ "$pr_labels" == *"bump: major"* ]]; then
            bump_type="major"
          elif [[ "$pr_labels" == *"bump: minor"* ]]; then
            bump_type="minor"
          fi

          # Check commit messages for version bump indication (if no labels)
          if [[ "$bump_type" == "patch" && "${{ github.event.head_commit.message }}" == *"BREAKING CHANGE"* ]]; then
            bump_type="major"
          elif [[ "$bump_type" == "patch" && "${{ github.event.head_commit.message }}" == *"feat"* ]]; then
            bump_type="minor"
          fi

          echo "bump_type=$bump_type" >> $GITHUB_ENV

      - name: Auto-bump version
        run: |
          current=$(cat VERSION | sed 's/^v//')
          major=$(echo $current | cut -d. -f1)
          minor=$(echo $current | cut -d. -f2)
          patch=$(echo $current | cut -d. -f3)

          if [ "${{ env.bump_type }}" == "major" ]; then
            major=$((major + 1))
            minor=0
            patch=0
          elif [ "${{ env.bump_type }}" == "minor" ]; then
            minor=$((minor + 1))
            patch=0
          else
            patch=$((patch + 1))
          fi

          next="v$major.$minor.$patch"
          echo $next > VERSION
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add VERSION
          git commit -m "ci: bump version to $next"
          git push origin HEAD:${{ github.head_ref }}

      - name: Deploy to GKE (Test & Scan + Delete)
        run: |
          kubectl apply -f deployment.yml
          kubectl rollout status deployment/rstudio-deployment -n rstudio
          # Test if application is up by hitting the HTTP endpoint
          app_url=$(kubectl get svc rstudio-deployment -n rstudio -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
          curl -f "http://$app_url:8787" || exit 1
          # Run Trivy scan on the Docker image
          trivy image guilhermelinsc/rstudio-ms:${{ steps.version.outputs.tag }} || exit 1
          # Cleanup deployment
          kubectl delete -f deployment.yml

  gke-deploy:
    name: Deploy to GKE on Merge to Main
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up GKE credentials
        uses: google-github-actions/auth@v0.5.0
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Configure GKE
        run: |
          gcloud container clusters get-credentials my-cluster --zone us-central1-a --project my-gcp-project

      - name: Apply updated deployment
        run: |
          kubectl apply -f deployment.yml